# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T-6ig_tymKOtnxmiiIRuynLGunykqJfc
"""

import streamlit as st
from openai import OpenAI
import time
import re

placeholderstr = "Please input your command"
user_name = "Gild"
user_image = "https://www.w3schools.com/howto/img_avatar.png"

def stream_data(stream_str):
    for word in stream_str.split(" "):
        yield word + " "
        time.sleep(0.15)

def main():
    st.set_page_config(
        page_title='K-Assistant - The Residemy Agent',
        layout='wide',
        initial_sidebar_state='auto',
        menu_items={
            'Get Help': 'https://streamlit.io/',
            'Report a bug': 'https://github.com',
            'About': 'About your application: **Hello world**'
            },
        page_icon="img/favicon.ico"
    )

    # Show title and description.
    st.title(f"üí¨ {user_name}'s Chatbot")

    with st.sidebar:
        selected_lang = st.selectbox("Language", ["English", "ÁπÅÈ´î‰∏≠Êñá"], index=1)
        if 'lang_setting' in st.session_state:
            lang_setting = st.session_state['lang_setting']
        else:
            lang_setting = selected_lang
            st.session_state['lang_setting'] = lang_setting

        st_c_1 = st.container(border=True)
        with st_c_1:
            st.image("https://www.w3schools.com/howto/img_avatar.png")

    st_c_chat = st.container(border=True)

    if "messages" not in st.session_state:
        st.session_state.messages = []
    else:
        for msg in st.session_state.messages:
            if msg["role"] == "user":
                if user_image:
                    st_c_chat.chat_message(msg["role"],avatar=user_image).markdown((msg["content"]))
                else:
                    st_c_chat.chat_message(msg["role"]).markdown((msg["content"]))
            elif msg["role"] == "assistant":
                st_c_chat.chat_message(msg["role"]).markdown((msg["content"]))
            else:
                try:
                    image_tmp = msg.get("image")
                    if image_tmp:
                        st_c_chat.chat_message(msg["role"],avatar=image_tmp).markdown((msg["content"]))
                except:
                    st_c_chat.chat_message(msg["role"]).markdown((msg["content"]))

    def generate_response(prompt):
    prompt = prompt.lower().strip()

    # Dictionary of players and their info
    players_info = {
        "rafael struick": {
            "bio": "Rafael Struick is a promising young forward with Indonesian roots, known for his explosive pace and attacking flair.",
            "club": "ADO Den Haag (Netherlands)"
        },
        "marselino ferdinan": {
            "bio": "Marselino Ferdinan is a talented playmaker from Indonesia, admired for his vision and dribbling skills.",
            "club": "KMSK Deinze (Belgium)"
        },
        "ole romeny": {
            "bio": "Ole Romeny is a dynamic forward with great movement and finishing ability.",
            "club": "FC Utrecht (Netherlands)"
        },
        "dean james": {
            "bio": "Dean James is a reliable left-back who contributes both defensively and offensively.",
            "club": "Go Ahead Eagles (Netherlands)"
        },
        "nathan tjoe-a-on": {
            "bio": "Nathan Tjoe-A-On is a composed defender with good passing ability and tactical awareness.",
            "club": "Swansea City (Wales)"
        },
        "thom haye": {
            "bio": "Thom Haye is a central midfielder known for his calm control, passing range, and football IQ.",
            "club": "SC Heerenveen (Netherlands)"
        },
        "kevin diks": {
            "bio": "Kevin Diks is a solid right-back with both defensive grit and attacking instinct.",
            "club": "FC Copenhagen (Denmark)"
        },
        "calvin verdonk": {
            "bio": "Calvin Verdonk is a versatile full-back with solid defensive skills and experience in top leagues.",
            "club": "NEC Nijmegen (Netherlands)"
        },
        "jay idzes": {
            "bio": "Jay Idzes is a towering center-back, calm under pressure and strong in the air.",
            "club": "Venezia FC (Italy)"
        },
        "mees hilgers": {
            "bio": "Mees Hilgers is a young defender with good positional sense and tackling ability.",
            "club": "FC Twente (Netherlands)"
        },
        "maarten paes": {
            "bio": "Maarten Paes is a dependable goalkeeper with strong reflexes and shot-stopping ability.",
            "club": "FC Dallas (USA)"
        },
        "emil audero": {
            "bio": "Emil Audero is an experienced goalkeeper with Italian-Indonesian heritage.",
            "club": "Inter Milan (Italy, on loan from Sampdoria)"
        },
        "sandy walsh": {
            "bio": "Sandy Walsh is a right-back with a great engine and leadership qualities.",
            "club": "KV Mechelen (Belgium)"
        },
        "ivar jenner": {
            "bio": "Ivar Jenner is a deep-lying playmaker who controls the tempo from midfield.",
            "club": "FC Utrecht (Netherlands)"
        },
        "eliano reijnders": {
            "bio": "Eliano Reijnders is a creative midfielder with a sharp eye for key passes.",
            "club": "PEC Zwolle (Netherlands)"
        },
        "jordi amat": {
            "bio": "Jordi Amat is a veteran center-back who brings composure and international experience.",
            "club": "Johor Darul Ta'zim (Malaysia)"
        },
        "joey pelupessy": {
            "bio": "Joey Pelupessy is a hardworking defensive midfielder with good tackling and positioning.",
            "club": "FC Groningen (Netherlands)"
        },
        "ricky kambuaya": {
            "bio": "Ricky Kambuaya is a box-to-box midfielder known for his energy and ability to carry the ball forward.",
            "club": "Dewa United (Indonesia)"
        },
        "ernando ari": {
            "bio": "Ernando Ari is one of Indonesia‚Äôs most promising young goalkeepers with sharp reflexes.",
            "club": "Persebaya Surabaya (Indonesia)"
        },
        "shayne pattynama": {
            "bio": "Shayne Pattynama is a full-back with great stamina and crossing ability.",
            "club": "Viking FK (Norway)"
        }
    }

    # Match player
    for player in players_info:
        if player in prompt:
            if "club" in prompt or "team" in prompt or "play for" in prompt:
                return f"{player.title()} currently plays for {players_info[player]['club']}."
            else:
                return players_info[player]['bio']

    # Match results and fixtures
    if "recent match" in prompt or "last game" in prompt or "result" in prompt:
        return (
            "Here are the recent matches for Timnas Indonesia:\n"
            "- Nov 19, 2024: Indonesia 2-0 Saudi Arabia (Goals by Marselino Ferdinan at 32' and 57')\n"
            "- Nov 15, 2024: Indonesia 0-4 Japan\n"
            "- Oct 15, 2024: China 2-1 Indonesia (Goal by Thom Haye at 86')\n"
            "- Oct 11, 2024: Bahrain 1-1 Indonesia (Goal by Ragnar Oratmangoen at 45'+3')\n"
            "- Sept 10, 2024: Indonesia 0-0 Australia\n"
            "- Sept 6, 2024: Saudi Arabia 1-0 Indonesia"
        )
    elif "upcoming match" in prompt or "next game" in prompt or "schedule" in prompt:
        return (
            "Upcoming matches for Timnas Indonesia:\n"
            "- June 5, 2025: Home game against China.\n"
            "- June 10, 2025: Away game against Japan."
        )
    elif "timnas" in prompt or "indonesia national team" in prompt:
        return "Timnas Indonesia is a team on the rise, blending local talent with foreign-born players under coach Shin Tae-yong."
    elif "coach" in prompt or "pelatih" in prompt:
        return "Timnas Indonesia is currently coached by Shin Tae-yong, a disciplined tactician from South Korea."
    elif re.search(r"\b(hi|hello|hey|halo)\b", prompt):
        return "Hey there! Want to ask about Timnas Indonesia or one of its players?"

    return "I'm here to help with information about Timnas Indonesia and its players. Ask me about any player or match!"


    # Chat function section (timing included inside function)
    def chat(prompt: str):
        st_c_chat.chat_message("user",avatar=user_image).write(prompt)
        st.session_state.messages.append({"role": "user", "content": prompt})

        response = generate_response(prompt)
        # response = f"You type: {prompt}"
        st.session_state.messages.append({"role": "assistant", "content": response})
        st_c_chat.chat_message("assistant").write_stream(stream_data(response))


    if prompt := st.chat_input(placeholder=placeholderstr, key="chat_bot"):
        chat(prompt)

if __name__ == "__main__":
    main()